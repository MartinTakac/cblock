pipeline {
    agent none
    post {
        failure {
            updateGitlabCommitStatus name: 'build', state: 'failed'
            slackSend color: 'danger', channel: '@chris.gorman', message: "${env.JOB_NAME} #${env.BUILD_NUMBER} failure"
        }
        success {
            updateGitlabCommitStatus name: 'build', state: 'success'
            slackSend color: 'good', channel: '@chris.gorman', message: "${env.JOB_NAME} #${env.BUILD_NUMBER} successful"
        }
    }
    options {
      gitLabConnection('jenkins-gitlab-integration-test')
    }
    environment {
        PATH = "$PATH:/opt/miniconda/bin"
    }
    stages {
        stage ("Build and Test") {
            steps {
                parallel (                 
                    "LinuxBuild": {
                        node ('miniconda') {                            
                            echo 'Building and testing model on Linux'
                            checkout([$class: 'GitSCM',
                                branches: [[name: "tests-chris.gorman"]],
                                extensions: [[$class: 'WipeWorkspace']],
                                userRemoteConfigs: [[url: 'git@gitlab.soulmachines.com:cogarch/cblock.git',
                                credentialsId: '1f7b3cce-7810-4686-9e97-430faa47b984']]
                            ])
                            // Defaults to last stable build                            
                            copyArtifacts(projectName: 'SM_Trunk_Deployment', filter: 'BL_MODEL_TESTS/**',
                                selector: lastSuccessful());                            
                            sh 'chmod +x ./build_linux.sh'
                            sh "./build_linux.sh -D SM_HOME:STRING=${env.WORKSPACE}/BL_MODEL_TESTS"                            
                            sh "python ${env.WORKSPACE}/BL_MODEL_TESTS/run_tests.py"
                            // Note that this directory gets made in the root, not in the script dir
                            junit 'gtest-xml/*.xml'
                        }
                    }
                )
            }
        }
    }
}
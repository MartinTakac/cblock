BL_container_connector

# depending on cblockInputs/inputType (nextElem, discardSeq, completeSeq) and cblockParams/indiv_xy:
#
# S0 -> init_dispatch_controls -> S4 -> S0
#   \
#    -> init_dispatch_elem -> init_xy -> S1_xy -> S2_xy -> S3 -> S0
#                         \
#                          -> init_bitmap -> S1_bitmap -> S2_bitmap -> S3 -> S0
#                         \
#                          DEPRECATED! -> init_none -> S3 -> S0

###
# load indiv output SOMs - must be in this connector, because here are weights of input indiv SOMs copied to output indiv SOMs

BL_identity_connector
connect_Inputs/perform_calculate=cblockParams/reset_all_weights

IO/input/state_buffered=planning/control/zeros_state
BL_identity_connector
connect_Inputs/perform_calculate=IO/asom_save/retrieved

IO/xy_output_som/associative_self_organizing_map=IO/asom_save/xy_map_retrieve.value
IO/xy_output_som/training_record=IO/asom_save/xy_training_record_retrieve.value
IO/bitmap_output_som/associative_self_organizing_map=IO/asom_save/bitmap_map_retrieve.value
IO/bitmap_output_som/training_record=IO/asom_save/bitmap_training_record_retrieve.value

#####################
# turn off ready if reset
BL_identity_connector
#BL_linear_transformation_connector
connect_Inputs/perform_calculate=IO/input/reset

#deb_connect_Inputs/status[4]=deb_connect_Inputs/status[4]+1

IO/input/ready_nextElem=IO/input_control/off
IO/input/ready_resetSeq=IO/input_control/off
IO/input/ready_finalizeSeq=IO/input_control/off

####################
# S4 last stage of discard and complete: wait for IO/input/reset, then turn off cblockInputs/reset and return to S0
BL_linear_transformation_connector
connect_Inputs/perform_calculate=IO/input_control/S4

#deb_connect_Inputs/status[2]=deb_connect_Inputs/status[2]+1

cblockInputs/reset=IO/input/reset>0 ? 0 : cblockInputs/reset

IO/input_control/S4=IO/input/reset>0 ? 0 : 1
IO/input_control/S0=IO/input/reset>0 ? 1 : 0

####################
# S3 (common to all indiv elem branches): write the final result and return to S0
BL_identity_connector
#BL_linear_transformation_connector
connect_Inputs/perform_calculate=IO/input_control/S3

#deb_connect_Inputs/status[3]=deb_connect_Inputs/status[3]+1

IO/input/seq_element=IO/input_wta/output_values
IO/input/ready_nextElem=IO/input_control/on
cblockInputs/reset=IO/input_control/off

IO/input_control/S3=IO/input_control/off
IO/input_control/S0=IO/input_control/on

#######################
# S2 in xy branch: turn off asom, write the input conversion results, go back to S0
BL_identity_connector
connect_Inputs/perform_calculate=IO/input_control/S2_xy

IO/input_control/S2_xy=IO/input_control/off

IO/input_wta/input_values=IO/xy_input_som/activation_map
IO/xy_input_som/perform_time_step=IO/input_control/off

IO/input_control/S3=IO/input_control/on

#######################
# S2 in bitmap branch: turn off asom, write the input conversion results to wta, go to S3
BL_identity_connector
connect_Inputs/perform_calculate=IO/input_control/S2_bitmap

IO/input_control/S2_bitmap=IO/input_control/off

IO/input_wta/input_values=IO/bitmap_input_som/activation_map
IO/bitmap_input_som/perform_time_step=IO/input_control/off

IO/input_control/S3=IO/input_control/on


#######################
# S1 in xy branch: turn off plasticity, allow one more asom step for outputs to settle, go to S2_xy
BL_identity_connector
connect_Inputs/perform_calculate=IO/input_control/S1_xy

IO/input_control/S1_xy=IO/input_control/off
IO/xy_input_som/plastic=IO/input_control/off
IO/xy_output_som/associative_self_organizing_map=IO/xy_input_som/associative_self_organizing_map
IO/input_control/S2_xy=IO/input_control/on

#######################
# S1 in bitmap branch: turn off plasticity, allow one more asom step for outputs to settle, go to S2_bitmap
BL_identity_connector
connect_Inputs/perform_calculate=IO/input_control/S1_bitmap

IO/input_control/S1_bitmap=IO/input_control/off
IO/bitmap_input_som/plastic=IO/input_control/off
IO/bitmap_output_som/associative_self_organizing_map=IO/bitmap_input_som/associative_self_organizing_map

IO/input_control/S2_bitmap=IO/input_control/on


#######################
# stage 0: listen for new input, then go to init_dispatch
BL_linear_transformation_connector
connect_Inputs/perform_calculate=IO/input_control/S0

IO/xy_input_som/perform_time_step=IO/indiv_type/xy*IO/xy_som_consts/display_real_time+IO/indiv_type/xy*IO/input_control/reset_maps
IO/bitmap_input_som/perform_time_step=IO/indiv_type/bitmap*IO/bitmap_som_consts/display_real_time+IO/indiv_type/bitmap*IO/input_control/reset_maps
IO/xy_input_som/reset_map=IO/input_control/reset_maps
IO/bitmap_input_som/reset_map=IO/input_control/reset_maps

IO/input_control/init_dispatch_elem=cblockInputs/ready*cblockInputs/inputType_nextElem
IO/input_control/init_dispatch_controls=cblockInputs/ready*cblockInputs/inputType_resetSeq+cblockInputs/ready*cblockInputs/inputType_finalizeSeq

#######################
# when new input ready in S0 dispatch tokenization
BL_linear_transformation_connector
connect_Inputs/perform_calculate=IO/input_control/init_dispatch_controls

#deb_connect_Inputs/status[0]=deb_connect_Inputs/status[0]+1

IO/input_control/init_dispatch_controls=IO/input_control/off
IO/input/ready_resetSeq=cblockInputs/inputType_resetSeq
IO/input/ready_finalizeSeq=cblockInputs/inputType_finalizeSeq
IO/input/state_buffered=cblockInputs/state
IO/input/reward_buffered=cblockInputs/reward
cblockInputs/reset=IO/input_control/on
IO/input_control/S0=IO/input_control/off
IO/input_control/S4=IO/input_control/on
# go to S4 to conclude - turn off cblockInputs/reset and return to S0

#######################
# when new input ready in S0 dispatch tokenization
BL_identity_connector
#BL_linear_transformation_connector
connect_Inputs/perform_calculate=IO/input_control/init_dispatch_elem

#deb_connect_Inputs/status[1]=deb_connect_Inputs/status[1]+1

IO/input_control/init_dispatch_elem=IO/input_control/off
IO/input_control/S0=IO/input_control/off

#dispatch new element for different routes of input conversion
# DEPRECATED! IO/input_control/init_none=IO/indiv_type/none
IO/input_control/init_xy=IO/indiv_type/xy
IO/input_control/init_bitmap=IO/indiv_type/bitmap

#######################
# init xy branch: set inputs to som, prepare for training, go to S1_xy
BL_identity_connector
connect_Inputs/perform_calculate=IO/input_control/init_xy

IO/input_control/init_xy=IO/input_control/off
IO/xy_input_som/input_values[0]=cblockInputs/input_x
IO/xy_input_som/input_values[1]=cblockInputs/input_y
IO/xy_input_som/perform_time_step=IO/input_control/on
IO/xy_input_som/plastic=IO/input_control/on
cblockInputs/reset=IO/input_control/on

IO/input_control/S1_xy=IO/input_control/on

#######################
# init bitmap branch: set inputs to som, go to S1_bitmap
BL_identity_connector
connect_Inputs/perform_calculate=IO/input_control/init_bitmap

IO/input_control/init_bitmap=IO/input_control/off
IO/bitmap_input_som/input_values=cblockInputs/input_bitmap
IO/bitmap_input_som/perform_time_step=IO/input_control/on
IO/bitmap_input_som/plastic=IO/input_control/on
cblockInputs/reset=IO/input_control/on

IO/input_control/S1_bitmap=IO/input_control/on

#######################
# no-indiv branch DEPRECATED! send bitmap directly to wta and go to S3
#BL_identity_connector
#connect_Inputs/perform_calculate=IO/input_control/init_none

#IO/input_wta/input_values=cblockInputs/input_bitmap
#cblockInputs/reset=IO/input_control/on

#IO/input_control/init_none=IO/input_control/off
#IO/input_control/S3=IO/input_control/on

#############
# do always - postprocessing
BL_linear_transformation_connector

cblockOutputs/alert_indiv_som_full=IO/indiv_type/xy*IO/xy_input_som/map_occupancy+IO/indiv_type/bitmap*IO/bitmap_input_som/map_occupancy>0.95 ? 1 : 0